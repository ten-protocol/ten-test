name: Run local tests
run-name: Run local tests (${{ github.event_name }})
on:
  schedule:
    - cron: '10 2 * * *'
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch of go-obscuro to run against'
        required: true
        default: 'main'
      arguments:
        description: 'Arguments to the pysys run'
        required: true
        default: '-e skip -e robustness'

jobs:
  Run-Local-Tests:
    runs-on: self-hosted
    steps:
      - run: echo "Triggered by ${{ github.event_name }} running on obscuro-test branch ${{ github.ref }} "

      - name: 'Log the go-obscuro branch for workflow dispatch'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "Running on go-obscuro branch ${{ github.event.inputs.target_branch }}"

      - name: 'Check out obscuro-test'
        uses: actions/checkout@v3
        with:
          path: ./obscuro-test

      - name: 'Check out go-obscuro code on schedule trigger'
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/checkout@v3
        with:
          repository: obscuronet/go-obscuro
          path: ./go-obscuro

      - name: 'Check out go-obscuro code on workflow dispatch'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v3
        with:
          repository: obscuronet/go-obscuro
          path: ./go-obscuro
          ref: ${{ github.event.inputs.target_branch }}

      - name: 'Docker clean containers and images before the test'
        run: |
          for i in `docker ps -a | awk '{ print $1 } ' | grep -v CONTAINER`; do docker stop $i && docker rm $i; done
          docker system prune -af --volumes

      - name: 'Build docker containers'
        run: |
          cd ${{ github.workspace }}/obscuro-test/utils/testnet
          docker compose -f docker-compose.local.yml build --parallel 

      - name: 'Start up testnet'
        run: |
          cd ${{ github.workspace }}/go-obscuro/
          go run ./testnet/launcher/cmd
          docker logs -f `docker ps -aqf "name=testnet-host-1"` > testnet-host-1.out &
          docker logs -f `docker ps -aqf "name=testnet-enclave-1"` > testnet-enclave-1.out &

      - name: 'Build required artifacts for running tests'
        run: |
          cd ${{ github.workspace }}/obscuro-test
          ./get_artifacts.sh
          ls -l ${{ github.workspace }}/obscuro-test/artifacts   

      # in principle this is not required as when the test framework sees a transaction count of 0
      # to an account that had a higher nonce value, it will assume a new deployment and reset
      - name: 'Do a persistence reset'
        run: |
          cd ${{ github.workspace }}/obscuro-test/admin
          /usr/local/bin/pysys.py run -m obscuro.local persistence_reset

      - name: 'Run tests on workflow dispatch'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          cd ${{ github.workspace }}/obscuro-test/tests
          /usr/local/bin/pysys.py run -m obscuro.local ${{ github.event.inputs.arguments }}

      - name: 'Run tests on schedule'
        if: ${{ github.event_name == 'schedule' }}
        run: |
          cd ${{ github.workspace }}/obscuro-test/tests
          /usr/local/bin/pysys.py run -m obscuro.local -e skip -e robustness

      - name: 'Upload testcase output'
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-artifact
          path: |
            ${{ github.workspace }}/obscuro-test/**/Output
          retention-days: 2

      - name: 'Upload container logs'
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: container-artifact
          path: |
            ${{ github.workspace }}/go-obscuro/testnet/*.out
          retention-days: 2

      - name: 'Docker clean containers and images after the test'
        if: always()
        run: |
          for i in `docker ps -a | awk '{ print $1 } ' | grep -v CONTAINER`; do docker stop $i && docker rm $i; done
          docker system prune -af --volumes