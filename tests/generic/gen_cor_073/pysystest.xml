<?xml version="1.0" encoding="utf-8"?>
<pysystest type="auto">

    <description>
        <title>Events: web3js client contract.getPastEvents, fromBlock toBlock</title>
        <purpose><![CDATA[
This is the first of three ways to get event logs for a contract event that is emitted. It is not a subscription approach
by rather polls for past event logs across a range of blocks, which you modify after each call i.e. like a forward
moving rolling window. It uses the getPastEvents method on the contract instance, specifying the name of the event of
interest. As a polling implementation, it uses HTTP as the connection protocol. Note that for Obscuro, the subscriber
goes through the WE where the accounts viewing key has already been registered, so there is no need to do this
explicitly.
]]>
        </purpose>
    </description>

    <classification>
        <groups inherit="true">
            <group>events</group>
            <group>web3js</group>
        </groups>
        <modes inherit="true">
            <mode>obscuro.dev</mode>
            <mode>obscuro.local</mode>
            <mode>goerli</mode>
            <mode>ganache</mode>
        </modes>
    </classification>

    <data>
        <class name="PySysTest" module="run"/>
    </data>

    <traceability>
        <requirements>
            <requirement id=""/>
        </requirements>
    </traceability>
</pysystest>
