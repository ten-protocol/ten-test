<?xml version="1.0" encoding="utf-8"?>
<pysystest type="auto">

    <description>
        <title>Payable: send funds to a contract address from another contract</title>
        <purpose><![CDATA[
Uses the solidity by example Receive and Send Ether example to send funds from one contract to another, using the
sendViaTransfer, sendViaSend, and sendViaCall function. Note that on Obscuro, no pk is used to register with the
wallet extension for the event log subscription. The wallet extension has a viewing key already registered by account 1
used for deploying and interacting with the contract. As the wallet extension has a single registered viewing key,
this will be used for all relevancy checks when the subscription is made to the enclave.
]]>
        </purpose>
    </description>

    <classification>
        <groups inherit="true">
            <group>payable</group>
        </groups>
        <modes inherit="true">
            <mode>obscuro.sepolia</mode>
            <mode>obscuro.uat</mode>
            <mode>obscuro.dev</mode>
            <mode>obscuro.local</mode>
            <mode>arbitrum.sepolia</mode>
            <mode>goerli</mode>
            <mode>ganache</mode>
            <mode>sepolia</mode>
        </modes>
    </classification>

    <data>
        <class name="PySysTest" module="run"/>
    </data>

    <traceability>
        <requirements>
            <requirement id=""/>
        </requirements>
    </traceability>
</pysystest>
