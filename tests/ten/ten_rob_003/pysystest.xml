<?xml version="1.0" encoding="utf-8"?>
<pysystest type="auto">

    <description>
        <title>Stress: high event rate publishing with multiple filters</title>
        <purpose><![CDATA[
Uses the EventEmitter contract, and starts multiple clients to poll for a variety of events from the contract (poller_all)
over recent block ranges, a client to poll just for the SimpleEvent from block zero (poller_simple), subscribers to listen
to a variety of events (subscriber), and a client to perform debug operations (debug_eventLogRelevancy). Once these are
set sequential transactors are kicked off to transact against the network meaning events should be received. Note that the
transactors use different accounts to the one that was used to deploy the contracts, and through a different gateway
token. Note also that filters on the event subscribers means not all transactions from transactors will have events
received.
]]>
        </purpose>
    </description>

    <classification>
        <groups inherit="true">
            <group>events</group>
            <group>robustness</group>
            <group>remote_load</group>
        </groups>
        <modes inherit="true">
            <mode>ten.sepolia</mode>
            <mode>ten.uat</mode>
            <mode>ten.dev</mode>
            <mode>ten.local</mode>
            <mode>ten.sim</mode>
        </modes>
    </classification>

    <data>
        <class name="PySysTest" module="run"/>
    </data>

    <traceability>
        <requirements>
            <requirement id=""/>
        </requirements>
    </traceability>
</pysystest>
